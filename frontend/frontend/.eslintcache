[{"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\index.js":"1","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\App.js":"3","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\utils\\config.js":"4","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\Routes\\PatientRoutes.js":"5","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Checkin\\Checkin.js":"6","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Vaccinations\\History.jsx":"7","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Login\\Login.jsx":"8","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Login\\OAuth2RedirectHandler.jsx":"9","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Signup\\Signup.jsx":"10","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\store\\index.js":"11","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Checkin\\Confirmation.js":"12","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Reservation\\Reservation.js":"13","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Vaccinations\\DueList.jsx":"14","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\store\\currentTime.js":"15","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Reservation\\MakeReservation.js":"16","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Layout\\index.jsx":"17","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\TimeElapser\\index.jsx":"18","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Header\\index.jsx":"19","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Reservation\\BookReservation.js":"20","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Report\\AdminReport.js":"21","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Report\\PatientReport.js":"22","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Reservation\\react-component.js":"23","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Reservation\\dist\\appointment-picker.min.js":"24","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\Routes\\AdminRoutes.js":"25","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\utils\\setAuthToken.js":"26","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Clinic\\Form.jsx":"27","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Vaccinations\\Form.jsx":"28","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Disease\\Form.jsx":"29","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\utils\\helper.js":"30"},{"size":517,"mtime":1639419371012,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1639419371021,"results":"33","hashOfConfig":"32"},{"size":1924,"mtime":1639570320412,"results":"34","hashOfConfig":"32"},{"size":526,"mtime":1639464362971,"results":"35","hashOfConfig":"32"},{"size":1235,"mtime":1639543643928,"results":"36","hashOfConfig":"32"},{"size":12147,"mtime":1639570320424,"results":"37","hashOfConfig":"32"},{"size":2367,"mtime":1639456642175,"results":"38","hashOfConfig":"32"},{"size":2995,"mtime":1639570320442,"results":"39","hashOfConfig":"32"},{"size":1960,"mtime":1639570320445,"results":"40","hashOfConfig":"32"},{"size":7989,"mtime":1639570320460,"results":"41","hashOfConfig":"32"},{"size":317,"mtime":1639456642186,"results":"42","hashOfConfig":"32"},{"size":760,"mtime":1639543616929,"results":"43","hashOfConfig":"32"},{"size":4821,"mtime":1639570364345,"results":"44","hashOfConfig":"32"},{"size":2359,"mtime":1639456642172,"results":"45","hashOfConfig":"32"},{"size":626,"mtime":1639570320479,"results":"46","hashOfConfig":"32"},{"size":3178,"mtime":1639508829844,"results":"47","hashOfConfig":"32"},{"size":274,"mtime":1639456642158,"results":"48","hashOfConfig":"32"},{"size":1797,"mtime":1639570320466,"results":"49","hashOfConfig":"32"},{"size":4943,"mtime":1639491851531,"results":"50","hashOfConfig":"32"},{"size":10569,"mtime":1639574928362,"results":"51","hashOfConfig":"32"},{"size":7169,"mtime":1639543616933,"results":"52","hashOfConfig":"32"},{"size":6107,"mtime":1639543616935,"results":"53","hashOfConfig":"32"},{"size":1101,"mtime":1639548948320,"results":"54","hashOfConfig":"32"},{"size":0,"mtime":1639549133300,"results":"55","hashOfConfig":"32"},{"size":867,"mtime":1639570320418,"results":"56","hashOfConfig":"32"},{"size":398,"mtime":1639570320488,"results":"57","hashOfConfig":"32"},{"size":4437,"mtime":1639570320430,"results":"58","hashOfConfig":"32"},{"size":4770,"mtime":1639570320474,"results":"59","hashOfConfig":"32"},{"size":1793,"mtime":1639570320437,"results":"60","hashOfConfig":"32"},{"size":127,"mtime":1639570320483,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1rbekf4",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\index.js",[],["133","134"],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\App.js",["135"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { Provider } from \"react-redux\";\r\n// import { Router } from \"react-router\"\r\nimport store from \"./store\";\r\nimport Signup from \"./components/Signup/Signup\";\r\nimport Login from \"./components/Login/Login\";\r\nimport OAuth2RedirectHandler from \"./components/Login/OAuth2RedirectHandler\";\r\nimport axios from \"axios\";\r\nimport { serverURL } from \"./utils/config\";\r\nimport { PatientRoutes } from \"./Routes/PatientRoutes\";\r\nimport AdminRoutes from \"./Routes/AdminRoutes\";\r\nimport Layout from \"./components/Layout\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nif (localStorage.getItem(\"token\")) {\r\n  setAuthToken(localStorage.getItem(\"token\"));\r\n}\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    let email = localStorage.getItem(\"email\");\r\n\r\n    async function fetchUserInfo() {\r\n      if (email) {\r\n        const userInfo = await axios.post(\r\n          `${serverURL}/api/auth/user/info?email=${email}`\r\n        );\r\n\r\n        if (userInfo && userInfo.data) {\r\n          localStorage.setItem(\"patientId\", userInfo.data.id);\r\n        }\r\n      }\r\n    }\r\n    fetchUserInfo();\r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/signup\" exact>\r\n              <Signup />\r\n            </Route>\r\n            <Route path=\"/\" exact>\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/patient/\">\r\n              <PatientRoutes />\r\n            </Route>\r\n            <Route path=\"/admin\">\r\n              <AdminRoutes />\r\n            </Route>\r\n            <Route\r\n              path=\"/oauth2/redirect\"\r\n              component={OAuth2RedirectHandler}\r\n            ></Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\utils\\config.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\Routes\\PatientRoutes.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Checkin\\Checkin.js",["136"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport styles from \"./Checkin.module.css\";\r\nimport {\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  CardActionArea,\r\n  Card,\r\n  Modal,\r\n  Paper,\r\n  styled,\r\n  Grid,\r\n  Box,\r\n  AppBar,\r\n  Tab,\r\n} from \"@material-ui/core\";\r\nimport { Tabs } from \"@material-ui/core\";\r\nimport promoImage from \"../../vaccine-promo.jpeg\";\r\nimport { serverURL } from \"../../utils/config\";\r\nimport { Confirmation } from \"./Confirmation\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(4),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n  maxHeight: 300,\r\n  overflow: \"auto\",\r\n  justifyContent: \"center\",\r\n  width: \"80%\",\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return <div {...other}>{value === index && <Box>{children}</Box>}</div>;\r\n}\r\n\r\nconst Checkin = () => {\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const [vaccinations, setVaccinations] = useState(\"\");\r\n  const [noShows, setNoShows] = useState(\"\");\r\n  useEffect(() => {\r\n    async function fetchCheckInData() {\r\n      const response_checkins = await axios.get(\r\n        `${serverURL}/checkin/vaccinations/${localStorage.getItem(\"patientId\")}`\r\n      );\r\n      setVaccinations(response_checkins.data);\r\n    }\r\n    async function fetchNoShowData() {\r\n      const response_noshows = await axios.get(\r\n        `${serverURL}/checkin/${localStorage.getItem(\r\n          \"patientId\"\r\n        )}?currentTimeOfApp=${systemTime}`\r\n      );\r\n      setNoShows(response_noshows.data);\r\n    }\r\n    fetchCheckInData();\r\n    fetchNoShowData();\r\n  }, []);\r\n  const systemTime = useSelector((state) => state.currentTime.time);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n  const updateCheckin = async (appointment, aptId) => {\r\n    try {\r\n      await axios.post(`${serverURL}/checkin/${aptId}`);\r\n      setMessage(\"Congrats! You checked in for your appointment!\");\r\n      sendEmail(appointment);\r\n    } catch (error) {\r\n      await setMessage(error.response.data.msg);\r\n      setIsError(true);\r\n    }\r\n    handleOpen(true);\r\n  };\r\n  const sendEmail = async (appointment) => {\r\n    try {\r\n      await axios.post(\r\n        `${serverURL}/email/meena.bhat1995@gmail.com?type=checkin`,\r\n        appointment\r\n      );\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <>\r\n      <center>\r\n        <div>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Confirmation message={message} isError={isError} />\r\n          </Modal>\r\n        </div>\r\n      </center>\r\n      <center>\r\n        <hr />\r\n        <div>\r\n          <AppBar position=\"static\" style={{ backgroundColor: \"black\" }}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              textColor=\"white\"\r\n              indicatorColor=\"secondary\"\r\n              aria-label=\"secondary tabs example\"\r\n              classes={styles.checkinApp}\r\n            >\r\n              <Tab label=\"Check In\" />\r\n              <Tab label=\"No Shows\" />\r\n            </Tabs>\r\n          </AppBar>\r\n        </div>\r\n        <TabPanel value={value} index={0}>\r\n          <Grid container>\r\n            {vaccinations &&\r\n              vaccinations.map((vaccination) => {\r\n                return (\r\n                  <Grid item xs={3}>\r\n                    <Item>\r\n                      {\" \"}\r\n                      <Card>\r\n                        <CardActionArea\r\n                          onClick={() => {\r\n                            updateCheckin(vaccination, vaccination.id);\r\n                          }}\r\n                        >\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            height=\"140\"\r\n                            image={promoImage}\r\n                            alt=\"green iguana\"\r\n                          />\r\n\r\n                          {vaccination.vaccinations &&\r\n                            vaccination.vaccinations.map((item) => {\r\n                              return (\r\n                                <>\r\n                                  <hr />\r\n                                  <CardContent>\r\n                                    <Typography\r\n                                      gutterBottom\r\n                                      component=\"div\"\r\n                                      variant=\"subtitle\"\r\n                                    >\r\n                                      {item.name}\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"subtitle\">\r\n                                      <i\r\n                                        className={`fas fa-calendar-day ${styles.fas}`}\r\n                                      ></i>{\" \"}\r\n                                      &nbsp;&nbsp;\r\n                                      {new Date(vaccination.appointmentDate)\r\n                                        .toString()\r\n                                        .slice(0, 16)}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle\"\r\n                                      gutterBottom\r\n                                      component=\"div\"\r\n                                    >\r\n                                      <i\r\n                                        className={`fas fa-syringe ${styles.fas}`}\r\n                                      ></i>{\" \"}\r\n                                      {item.numberOfShots}\r\n                                      <br />\r\n                                      <i\r\n                                        className={`fas fa-stopwatch ${styles.fas}`}\r\n                                      ></i>{\" \"}\r\n                                      {item.shotInternalVal}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle\"\r\n                                      color=\"text.secondary\"\r\n                                    >\r\n                                      <Typography\r\n                                        variant=\"subtitle\"\r\n                                        color=\"text.secondary\"\r\n                                      >\r\n                                        {item.diseases &&\r\n                                          item.diseases.map((disease) => {\r\n                                            return (\r\n                                              <>\r\n                                                <p>{disease.name}</p>\r\n                                                <p>{disease.description}</p>\r\n                                              </>\r\n                                            );\r\n                                          })}\r\n                                      </Typography>\r\n                                    </Typography>\r\n                                  </CardContent>\r\n                                </>\r\n                              );\r\n                            })}\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Item>\r\n                  </Grid>\r\n                );\r\n              })}\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <Grid container>\r\n            {noShows &&\r\n              noShows.map((vaccination) => {\r\n                return (\r\n                  <Grid item xs={3}>\r\n                    <Item>\r\n                      {\" \"}\r\n                      <Card>\r\n                        <CardActionArea>\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            height=\"140\"\r\n                            image={promoImage}\r\n                            alt=\"green iguana\"\r\n                          />\r\n                          <CardContent>\r\n                            <i className={`fas fa-id-card ${styles.fas}`}></i>{\" \"}\r\n                            &nbsp;&nbsp;\r\n                            {vaccination.id}\r\n                            <br />\r\n                            <i\r\n                              className={`fas fa-calendar-day ${styles.fas}`}\r\n                            ></i>{\" \"}\r\n                            &nbsp;&nbsp;\r\n                            {new Date(vaccination.appointmentDate)\r\n                              .toString()\r\n                              .slice(0, 16)}\r\n                          </CardContent>\r\n\r\n                          {vaccination.vaccinations &&\r\n                            vaccination.vaccinations.map((item) => {\r\n                              return (\r\n                                <>\r\n                                  <hr />\r\n                                  <CardContent>\r\n                                    <Typography\r\n                                      gutterBottom\r\n                                      component=\"div\"\r\n                                      variant=\"subtitle\"\r\n                                    >\r\n                                      {item.name}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      gutterBottom\r\n                                      component=\"div\"\r\n                                      variant=\"subtitle\"\r\n                                    >\r\n                                      <i\r\n                                        className={`fas fa-syringe ${styles.fas}`}\r\n                                      ></i>{\" \"}\r\n                                      {item.numberOfShots}\r\n                                      <br />\r\n                                      <i\r\n                                        className={`fas fa-stopwatch ${styles.fas}`}\r\n                                      ></i>{\" \"}\r\n                                      {item.shotInternalVal}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle\"\r\n                                      color=\"text.secondary\"\r\n                                    >\r\n                                      <Typography\r\n                                        variant=\"subtitle\"\r\n                                        color=\"text.secondary\"\r\n                                      >\r\n                                        {item.diseases &&\r\n                                          item.diseases.map((disease) => {\r\n                                            return (\r\n                                              <>\r\n                                                <p>{disease.name}</p>\r\n                                                <p>{disease.description}</p>\r\n                                              </>\r\n                                            );\r\n                                          })}\r\n                                      </Typography>\r\n                                    </Typography>\r\n                                  </CardContent>\r\n                                </>\r\n                              );\r\n                            })}\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Item>\r\n                  </Grid>\r\n                );\r\n              })}\r\n          </Grid>\r\n        </TabPanel>\r\n      </center>\r\n    </>\r\n  );\r\n};\r\nexport default Checkin;\r\n","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Vaccinations\\History.jsx",["137","138"],"import React, { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst VaccinationHistory = () => {\r\n  const [vaccinations, setVaccinations] = useState([]);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Vaccination Name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Number of Shots</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Clinic</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Date</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {vaccinations.map((vaccine) => (\r\n            <StyledTableRow key={vaccine.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {vaccine.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">\r\n                {vaccine.numOfShots}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{vaccine.clinic}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{vaccine.date}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default VaccinationHistory;\r\n","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Login\\OAuth2RedirectHandler.jsx",["139","140","141"],"import React, { Component } from 'react';\r\nimport { ACCESS_TOKEN,serverURL} from '../../utils/config';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from 'axios';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\nclass OAuth2RedirectHandler extends Component {\r\n    getUrlParameter(name) {\r\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n        var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\r\n\r\n        var results = regex.exec(this.props.location.search);\r\n        return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n    };\r\n\r\n    componentDidMount() {\r\n        const token = this.getUrlParameter('token');\r\n        const email = this.getUrlParameter('email');\r\n        const fName = this.getUrlParameter('firstName');\r\n        const lName = this.getUrlParameter('lastName');\r\n        localStorage.setItem(ACCESS_TOKEN, token);\r\n        localStorage.setItem(\"email\", email);\r\n        \r\n        if(token) {\r\n            if (localStorage.getItem(\"token\")) {\r\n                setAuthToken(localStorage.getItem(\"token\"));\r\n              }\r\n        axios.post(`${serverURL}/api/auth/user?email=`+email+`&fName=`+fName+`&lName=`+lName).then((res) => {\r\n            if(res && res.data==\"Account Created\"){\r\n                    alert(\"Please check your email for verification link.\")\r\n                    this.props.history.push(\"/\");\r\n            }\r\n            else if(res){\r\n                const decoded_token = jwt_decode(res.data.accessToken);\r\n                // localStorage.setItem(ACCESS_TOKEN, decoded_token.sub)\r\n                if(decoded_token.sub.includes('sjsu.edu'))\r\n                    this.props.history.push(\"/admin/dashboard\");\r\n                else\r\n                    this.props.history.push(\"/patient/dashboard\");\r\n            }\r\n\r\n          })\r\n        }\r\n    }\r\n    render() {        \r\n\r\n        return null;\r\n   \r\n    }\r\n}\r\n\r\n\r\nexport default OAuth2RedirectHandler;","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Signup\\Signup.jsx",["142","143"],"import React from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  RadioGroup,\r\n  Radio,\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport { serverURL } from \"../../utils/config\";\r\nimport \"../../styles/Signup/Signup.css\";\r\n\r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fName: \"\",\r\n      mName: \"\",\r\n      lName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      dob: new Date(),\r\n      address: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n      gender: \"\",\r\n    };\r\n  }\r\n\r\n  updateFName = (e) => {\r\n    this.setState({ fName: e.target.value });\r\n  };\r\n\r\n  updateMName = (e) => {\r\n    this.setState({ mName: e.target.value });\r\n  };\r\n\r\n  updateLName = (e) => {\r\n    this.setState({ lName: e.target.value });\r\n  };\r\n\r\n  updateDob = (e) => {\r\n    this.setState({ dob: e.target.value });\r\n  };\r\n\r\n  updateEmail = (e) => {\r\n    this.setState({ email: e.target.value });\r\n  };\r\n\r\n  updatePassword = (e) => {\r\n    this.setState({ password: e.target.value });\r\n  };\r\n\r\n  updateMName = (e) => {\r\n    this.setState({ mName: e.target.value });\r\n  };\r\n\r\n  updateAddress = (e) => {\r\n    this.setState({ address: e.target.value });\r\n  };\r\n\r\n  updateCity = (e) => {\r\n    this.setState({ city: e.target.value });\r\n  };\r\n\r\n  updateState = (e) => {\r\n    this.setState({ state: e.target.value });\r\n  };\r\n\r\n  updateGender = (e) => {\r\n    this.setState({ gender: e.target.value });\r\n  };\r\n\r\n  updateZip = (e) => {\r\n    this.setState({ zip: e.target.value });\r\n  };\r\n\r\n  attemptSignUp = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      fName,\r\n      mName,\r\n      lName,\r\n      email,\r\n      password,\r\n      gender,\r\n      dob,\r\n      address,\r\n      city,\r\n      state,\r\n      zip,\r\n    } = this.state;\r\n\r\n    axios\r\n      .post(\r\n        `${serverURL}/api/auth/register?email=` +\r\n          email +\r\n          `&password=` +\r\n          password +\r\n          `&fName=` +\r\n          fName +\r\n          `&lName=` +\r\n          lName +\r\n          `&gender=` +\r\n          gender +\r\n          `&dob=` +\r\n          dob +\r\n          `&address=` +\r\n          address +\r\n          `&city=` +\r\n          city +\r\n          `&state=` +\r\n          state +\r\n          `&zip=` +\r\n          zip +\r\n          `&mName=` +\r\n          mName\r\n      )\r\n      .then((res) => {\r\n        swal({\r\n          title: \"Success\",\r\n          text: \"Account Created. Please click on the verification link sent to your email for login.\",\r\n          icon: \"success\",\r\n        }).then(() => {\r\n          this.props.history.push(\"/\");\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        swal({\r\n          title: \"Failed\",\r\n          text: \"Email In Use\",\r\n          icon: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  cancelSignUp = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sign-up-grid\">\r\n        <form className=\"sign-up-form\" onSubmit={this.attemptSignUp}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                label=\"First Name\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={this.updateFName}\r\n                style={{ width: \"100%\" }}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                label=\"Middle Name\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={this.updateMName}\r\n                style={{\r\n                  gridArea: \"mName\",\r\n                }}\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                label=\"Last Name\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={this.updateLName}\r\n                required\r\n                style={{ width: \"75%\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={this.updateEmail}\r\n                required\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                inputProps={{\r\n                  minLength: 6,\r\n                  maxLength: 12,\r\n                }}\r\n                onChange={this.updatePassword}\r\n                required\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"DOB\"\r\n                type=\"date\"\r\n                defaultValue=\"\"\r\n                size={{ width: 220 }}\r\n                onChange={this.updateDob}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                required\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          `{\" \"}\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup row onChange={this.updateGender}>\r\n              <FormControlLabel value=\"male\" control={<Radio required={true}/>} label=\"Male\" />\r\n              <FormControlLabel \r\n                value=\"female\"\r\n                control={<Radio required={true}/>}\r\n                label=\"Female\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"others\"\r\n                control={<Radio required={true}/>}\r\n                label=\"Others\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                label=\"Street and Number\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={this.updateAddress}\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                label=\"City\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={this.updateCity}\r\n                defaultValue=\"San Jose\"\r\n                style={{\r\n                  gridArea: \"lName\",\r\n                }}\r\n                required\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                label=\"State\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={this.updateState}\r\n                defaultValue=\"California\"\r\n                required\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                label=\"ZIP\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={this.updateZip}\r\n                defaultValue=\"95134\"\r\n                required\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={this.cancelSignUp}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Signup);\r\n","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\store\\index.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Checkin\\Confirmation.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Reservation\\Reservation.js",["144","145","146","147","148","149"],"import Container from \"@material-ui/core/Container\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\nimport { Grid, Button, NativeSelect, InputLabel } from \"@material-ui/core\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport noReservationImage from \"./vaccine_2.png\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport MakeReservation from \"./MakeReservation\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { serverURL } from \"../../utils/config\";\r\nconst Reservation = () => {\r\n  let patientId = localStorage.getItem(\"patientId\");\r\n  let token = localStorage.getItem(\"accessToken\");\r\n  let bearer = `Bearer ` + token;\r\n  const history = useHistory();\r\n  const [alignment, setAlignment] = useState(\"Upcoming_Appointments\");\r\n  const [show, setShow] = useState(false);\r\n  const [no, setNo] = useState(2);\r\n  const handleChange = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n  const showModal = () => {\r\n    setShow(!show);\r\n  };\r\n  const [allBookings, setAllBookings] = useState([]);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: serverURL + `/api/appointment/${patientId}`,\r\n      headers: { \"Content-Type\": \"application/json\", Authorization: bearer },\r\n    })\r\n      .then((response) => {\r\n        setAllBookings(response.data);\r\n        alert(\"YES\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container style={{ textAlign: \"left\" }}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <ToggleButtonGroup\r\n            color=\"primary\"\r\n            value={alignment}\r\n            exclusive\r\n            onChange={handleChange}\r\n          >\r\n            <ToggleButton value=\"Upcoming_Appointments\">\r\n              Appointments\r\n            </ToggleButton>\r\n            <ToggleButton value=\"Past_Appointments\">\r\n              Past Appointments\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={6}\r\n          alignItems=\"flex-end\"\r\n          justifyContent=\"flex-end\"\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ backgroundColor: \"dodgerBlue\", color: \"white\" }}\r\n            onClick={() => {\r\n              history.push(\"/patient/appointments/new\");\r\n            }}\r\n          >\r\n            Book Appointment\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid style={{ marginTop: \"3%\" }}>\r\n        <Grid item>\r\n          <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\r\n            Sort by time :\r\n            <NativeSelect\r\n              defaultValue={30}\r\n              inputProps={{\r\n                name: \"age\",\r\n                id: \"uncontrolled-native\",\r\n              }}\r\n            >\r\n              <option value=\"latest\">Latest</option>\r\n              <option value=\"oldest\">Oldest</option>\r\n            </NativeSelect>\r\n          </InputLabel>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        style={{\r\n          backgroundColor: \"#EAEEF3\",\r\n          padding: \"1%\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        {no != 1 &&\r\n          allBookings.map((item) => {\r\n            return (\r\n              <div>\r\n                <Grid item container xs={4} style={{ marginTop: \"1%\" }}>\r\n                  <Card style={{ cursor: \"pointer\" }} sx={{ minWidth: 275 }}>\r\n                    <CardContent>\r\n                      <Typography variant=\"h5\" component=\"div\">\r\n                        {item.name}\r\n                      </Typography>\r\n                      <Typography color=\"text.secondary\">\r\n                        Time - {item.date}\r\n                      </Typography>\r\n                      <Typography color=\"text.secondary\">\r\n                        Vaccine - {item.vaccineName}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        Address- {item.street}\r\n                        <br />\r\n                        {item.city}, {item.state} {item.zipcode}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </div>\r\n            );\r\n          })}\r\n        {no == 1 && (\r\n          <div style={{ textAlign: \"center\", marginTop: \"4%\" }}>\r\n            <img src={noReservationImage}></img>\r\n            <h2>No appointments to show</h2>\r\n          </div>\r\n        )}\r\n      </Grid>\r\n      {show && <MakeReservation func={showModal} />}\r\n    </Container>\r\n  );\r\n};\r\nexport default Reservation;\r\n","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Vaccinations\\DueList.jsx",["150","151"],"import React, { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst VaccinationDues = () => {\r\n  const [vaccinations, setVaccinations] = useState([]);\r\n\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Vaccination Name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Number of Shots</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Clinic</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Date</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {vaccinations.map((vaccine) => (\r\n            <StyledTableRow key={vaccine.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {vaccine.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">\r\n                {vaccine.numOfShots}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{vaccine.clinic}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{vaccine.date}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default VaccinationDues;\r\n","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\store\\currentTime.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Reservation\\MakeReservation.js",["152","153","154","155","156","157"],"import {\r\n  Modal,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Grid,\r\n  FormLabel,\r\n} from \"@material-ui/core/\";\r\nimport Select from \"react-select\";\r\nimport { useState } from \"react\";\r\nconst MakeReservation = (props) => {\r\n  const [open, setOpen] = useState(true);\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    border: \"1px solid blue\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const [vaccName, setVaccName] = useState();\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const options = [\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n  ];\r\n  const handleChange = (options) => {\r\n    console.log(options);\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal open=\"true\" onClose={props.func}>\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            New Reservation\r\n          </Typography>\r\n\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}></Typography>\r\n          <Grid style={{ marginTop: \"5%\" }}>\r\n            {/* <TextField\r\n              style={{ width: \"-webkit-fill-available\" }}\r\n              id=\"standard-basic\"\r\n              label=\"Standard\"\r\n              variant=\"standard\"\r\n            /> */}\r\n            <Grid item style={{ marginTop: \"5%\" }}>\r\n              <FormLabel style={{ marginTop: \"3%\", color: \"black\" }}>\r\n                Vaccine Name\r\n              </FormLabel>\r\n              <Select\r\n                clearable=\"true\"\r\n                options={options}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: \"5%\" }}>\r\n              <FormLabel style={{ marginTop: \"3%\", color: \"black\" }}>\r\n                Clinic\r\n              </FormLabel>\r\n              <Select clearable=\"true\" options={options} />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: \"5%\" }}>\r\n              <FormLabel style={{ marginTop: \"3%\", color: \"black\" }}>\r\n                Vaccine Name\r\n              </FormLabel>\r\n              <Select clearable=\"true\" options={options} />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default MakeReservation;\r\n","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Layout\\index.jsx",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\TimeElapser\\index.jsx",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Header\\index.jsx",["158"],"import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TimeElapser from \"../TimeElapser\";\r\n\r\nconst pages = [\r\n  { label: \"Appointments\", link: \"/patient/appointments\" },\r\n  { label: \"Check-in\", link: \"/patient/checkin\" },\r\n  { label: \"Vaccination History\", link: \"/patient/vaccination/history\" },\r\n  { label: \"Patient Report\", link: \"/patient/report\" },\r\n];\r\nconst settings = [\"Profile\", \"Logout\"];\r\n\r\nconst ResponsiveAppBar = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\r\n          >\r\n            <Link to=\"/patient/dashboard\">VMS</Link>\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\",\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: \"block\", md: \"none\" },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">\r\n                    <Link to={page.link}>{page.label}</Link>\r\n                  </Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\r\n          >\r\n            VMS\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\r\n              >\r\n                <Link to={page.link}>{page.label}</Link>\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: \"45px\" }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default ResponsiveAppBar;\r\n","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Reservation\\BookReservation.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172"],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Report\\AdminReport.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Report\\PatientReport.js",["173"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { serverURL } from \"../../utils/config\";\r\nimport { Stack } from \"@mui/material\";\r\nimport \"chart.js/auto\";\r\nimport axios from \"axios\";\r\nimport { Paper, styled, Grid, Typography, Button } from \"@material-ui/core\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport { Alert } from \"@mui/material\";\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body1,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n  maxHeight: 900,\r\n  overflow: \"auto\",\r\n  justifyContent: \"center\",\r\n  width: \"100%\",\r\n}));\r\n\r\nconst PatientReport = () => {\r\n  const [startDate, setStartDate] = React.useState(new Date());\r\n  const [endDate, setEndDate] = React.useState(new Date());\r\n  const systemTime = useSelector((state) => state.currentTime.time);\r\n  const [data, setData] = React.useState(\"\");\r\n  const [error, setError] = React.useState(\"\");\r\n  const [patientReviewChart, setPatientReviewChart] = useState({\r\n    labels: [\"Generate to view\"],\r\n    datasets: [\r\n      {\r\n        label: \"Patient Report\",\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n\r\n        borderColor: \"rgba(0,0,0,1)\",\r\n        borderWidth: 2,\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const generate = async () => {\r\n    try {\r\n      const response_checkins = await axios.get(\r\n        `${serverURL}/report/${localStorage.getItem(\r\n          \"patientId\"\r\n        )}?startDate=${moment(startDate).format(\"YYYY-MM-DD\")}&endDate=${moment(\r\n          endDate\r\n        ).format(\"YYYY-MM-DD\")}&systemDate=${moment(systemTime).format(\r\n          \"YYYY-MM-DD\"\r\n        )}`\r\n      );\r\n      setError(\"\");\r\n      setData(response_checkins.data);\r\n      setPatientReviewChart({\r\n        labels: [\r\n          \"Number of Appointments\",\r\n          \"Number of No Shows\",\r\n          \"Future Appointments that are not checked in\",\r\n          \"Rate\",\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: \"Reviews per day in the month of December\",\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.2)\",\r\n              \"rgba(54, 162, 235, 0.2)\",\r\n              \"rgba(255, 206, 86, 0.2)\",\r\n              \"rgba(75, 192, 192, 0.2)\",\r\n              \"rgba(153, 102, 255, 0.2)\",\r\n              \"rgba(255, 159, 64, 0.2)\",\r\n            ],\r\n            borderColor: \"rgba(0,0,0,1)\",\r\n            borderWidth: 2,\r\n            data: [\r\n              response_checkins.data[\"noOfAppointments\"],\r\n              response_checkins.data[\"noOfNoShow\"],\r\n              response_checkins.data[\"futureUncheckedinApts\"],\r\n              response_checkins.data[\"rate\"],\r\n            ],\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      setError(error.response.data.msg);\r\n    }\r\n  };\r\n  //   const systemTime = useSelector((state) => state);\r\n  const patientReviewDoughnut = () => (\r\n    <Doughnut\r\n      data={patientReviewChart}\r\n      options={{\r\n        title: {\r\n          display: true,\r\n          text: \"Reviews per day in the month of December\",\r\n          fontSize: 20,\r\n        },\r\n        legend: {\r\n          display: true,\r\n          position: \"right\",\r\n        },\r\n      }}\r\n    />\r\n  );\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Stack sx={{ width: \"100%\" }} spacing={2}>\r\n          <Alert severity=\"error\" style={{ backgroundColor: \"orange\" }}>\r\n            {error}\r\n          </Alert>\r\n        </Stack>\r\n      )}\r\n      <Grid container>\r\n        <Grid item xs={2}>\r\n          <Item>\r\n            <Typography>Choose a start date to generate report</Typography>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n            />\r\n            <br />\r\n            <Typography variant=\"subtitle1\">\r\n              {\" \"}\r\n              <b>\r\n                {\" \"}\r\n                Start Date : {new Date(startDate).toString().slice(0, 16)}{\" \"}\r\n              </b>\r\n            </Typography>\r\n          </Item>\r\n          <Item>\r\n            <Typography>Choose an end date to generate report</Typography>\r\n            <DatePicker\r\n              selected={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n            />\r\n            <Typography variant=\"subtitle1\">\r\n              <b> End Date : {new Date(endDate).toString().slice(0, 16)}</b>\r\n            </Typography>\r\n          </Item>\r\n          <Item>\r\n            <Typography>\r\n              <br />\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              // className=\"primary\"\r\n              onClick={() => {\r\n                generate();\r\n              }}\r\n            >\r\n              Generate Report\r\n            </Button>\r\n          </Item>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={3}>\r\n          <Item>{patientReviewDoughnut()}</Item>\r\n          <Item>\r\n            <Typography>Patient Report</Typography>\r\n          </Item>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={4}>\r\n          <Item>\r\n            <Typography>\r\n              {\" \"}\r\n              <Item>Data</Item>\r\n              {/* <Item>System Date :{systemTime} </Item> */}\r\n              <Item>Number of Appointments : {data[\"noOfAppointments\"]} </Item>\r\n              <Item>Number of No Shows : {data[\"noOfNoShow\"]}</Item>\r\n              <Item>\r\n                Future Appointments that are not checked in :{\" \"}\r\n                {data[\"futureUncheckedinApts\"]}\r\n              </Item>\r\n              <Item>Rate : {data[\"rate\"]}</Item>\r\n            </Typography>\r\n          </Item>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={3}></Grid>\r\n    </>\r\n  );\r\n};\r\nexport default PatientReport;\r\n","C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Reservation\\react-component.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Reservation\\dist\\appointment-picker.min.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\Routes\\AdminRoutes.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Clinic\\Form.jsx",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Vaccinations\\Form.jsx",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\components\\Disease\\Form.jsx",[],"C:\\Users\\Checkout\\Desktop\\275\\frontend\\frontend\\src\\utils\\helper.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":14,"column":8,"nodeType":"180","messageId":"181","endLine":14,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":65,"column":6,"nodeType":"184","endLine":65,"endColumn":8,"suggestions":"185"},{"ruleId":"178","severity":1,"message":"186","line":31,"column":10,"nodeType":"180","messageId":"181","endLine":31,"endColumn":20},{"ruleId":"178","severity":1,"message":"187","line":36,"column":24,"nodeType":"180","messageId":"181","endLine":36,"endColumn":39},{"ruleId":"178","severity":1,"message":"188","line":1,"column":8,"nodeType":"180","messageId":"181","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":8,"column":31,"nodeType":"191","messageId":"192","endLine":8,"endColumn":32,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":28,"column":31,"nodeType":"196","messageId":"197","endLine":28,"endColumn":33},{"ruleId":"198","severity":1,"message":"199","line":171,"column":17,"nodeType":"200","messageId":"201","endLine":171,"endColumn":42},{"ruleId":"198","severity":1,"message":"199","line":267,"column":17,"nodeType":"200","messageId":"201","endLine":267,"endColumn":42},{"ruleId":"178","severity":1,"message":"202","line":9,"column":8,"nodeType":"180","messageId":"181","endLine":9,"endColumn":13},{"ruleId":"178","severity":1,"message":"203","line":22,"column":14,"nodeType":"180","messageId":"181","endLine":22,"endColumn":19},{"ruleId":"182","severity":1,"message":"204","line":43,"column":6,"nodeType":"184","endLine":43,"endColumn":8,"suggestions":"205"},{"ruleId":"194","severity":1,"message":"206","line":106,"column":13,"nodeType":"196","messageId":"197","endLine":106,"endColumn":15},{"ruleId":"194","severity":1,"message":"195","line":133,"column":13,"nodeType":"196","messageId":"197","endLine":133,"endColumn":15},{"ruleId":"207","severity":1,"message":"208","line":135,"column":13,"nodeType":"209","endLine":135,"endColumn":43},{"ruleId":"178","severity":1,"message":"186","line":31,"column":10,"nodeType":"180","messageId":"181","endLine":31,"endColumn":20},{"ruleId":"178","severity":1,"message":"187","line":36,"column":24,"nodeType":"180","messageId":"181","endLine":36,"endColumn":39},{"ruleId":"178","severity":1,"message":"210","line":5,"column":3,"nodeType":"180","messageId":"181","endLine":5,"endColumn":12},{"ruleId":"178","severity":1,"message":"211","line":12,"column":10,"nodeType":"180","messageId":"181","endLine":12,"endColumn":14},{"ruleId":"178","severity":1,"message":"212","line":24,"column":9,"nodeType":"180","messageId":"181","endLine":24,"endColumn":19},{"ruleId":"178","severity":1,"message":"213","line":27,"column":10,"nodeType":"180","messageId":"181","endLine":27,"endColumn":18},{"ruleId":"178","severity":1,"message":"214","line":27,"column":20,"nodeType":"180","messageId":"181","endLine":27,"endColumn":31},{"ruleId":"178","severity":1,"message":"215","line":28,"column":9,"nodeType":"180","messageId":"181","endLine":28,"endColumn":20},{"ruleId":"178","severity":1,"message":"216","line":15,"column":8,"nodeType":"180","messageId":"181","endLine":15,"endColumn":19},{"ruleId":"178","severity":1,"message":"217","line":4,"column":3,"nodeType":"180","messageId":"181","endLine":4,"endColumn":6},{"ruleId":"178","severity":1,"message":"218","line":9,"column":3,"nodeType":"180","messageId":"181","endLine":9,"endColumn":12},{"ruleId":"178","severity":1,"message":"219","line":11,"column":8,"nodeType":"180","messageId":"181","endLine":11,"endColumn":14},{"ruleId":"178","severity":1,"message":"220","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":18},{"ruleId":"178","severity":1,"message":"221","line":13,"column":8,"nodeType":"180","messageId":"181","endLine":13,"endColumn":18},{"ruleId":"182","severity":1,"message":"222","line":80,"column":6,"nodeType":"184","endLine":80,"endColumn":14,"suggestions":"223"},{"ruleId":"178","severity":1,"message":"224","line":82,"column":9,"nodeType":"180","messageId":"181","endLine":82,"endColumn":17},{"ruleId":"178","severity":1,"message":"225","line":91,"column":9,"nodeType":"180","messageId":"181","endLine":91,"endColumn":15},{"ruleId":"226","severity":1,"message":"227","line":192,"column":15,"nodeType":"228","messageId":"197","endLine":192,"endColumn":24},{"ruleId":"226","severity":1,"message":"227","line":201,"column":15,"nodeType":"228","messageId":"197","endLine":201,"endColumn":24},{"ruleId":"194","severity":1,"message":"195","line":209,"column":34,"nodeType":"196","messageId":"197","endLine":209,"endColumn":36},{"ruleId":"226","severity":1,"message":"227","line":249,"column":17,"nodeType":"228","messageId":"197","endLine":249,"endColumn":26},{"ruleId":"226","severity":1,"message":"227","line":258,"column":17,"nodeType":"228","messageId":"197","endLine":258,"endColumn":26},{"ruleId":"194","severity":1,"message":"195","line":265,"column":36,"nodeType":"196","messageId":"197","endLine":265,"endColumn":38},{"ruleId":"178","severity":1,"message":"229","line":1,"column":27,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'systemTime'. Either include it or remove the dependency array.","ArrayExpression",["232"],"'createData' is defined but never used.","'setVaccinations' is assigned a value but never used.","'React' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["233","234"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Modal' is defined but never used.","'setNo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bearer' and 'patientId'. Either include them or remove the dependency array.",["235"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextField' is defined but never used.","'open' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'vaccName' is assigned a value but never used.","'setVaccName' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'TimeElapser' is defined but never used.","'Box' is defined but never used.","'FormLabel' is defined but never used.","'styles' is defined but never used.","'DatePicker' is defined but never used.","'AppoPicker' is defined but never used.","React Hook useEffect has missing dependencies: 'bearer', 'clinic.id', 'date', 'searchClinic', and 'searchVaccine'. Either include them or remove the dependency array.",["236"],"'timeZone' is assigned a value but never used.","'picker' is assigned a value but never used.","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"messageId":"239","fix":"240","desc":"241"},{"messageId":"242","fix":"243","desc":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [systemTime]",{"range":"249","text":"250"},"removeEscape",{"range":"251","text":"252"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"253","text":"254"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [bearer, patientId]",{"range":"255","text":"256"},"Update the dependencies array to be: [bearer, clinic.id, date, search, searchClinic, searchVaccine]",{"range":"257","text":"258"},[1804,1806],"[systemTime]",[332,333],"",[332,332],"\\",[1647,1649],"[bearer, patientId]",[2395,2403],"[bearer, clinic.id, date, search, searchClinic, searchVaccine]"]